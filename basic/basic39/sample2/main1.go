package main

import (
	"time"
	"fmt"
)

/*
 # チャネル
 ## チャネルのキューとしての機能
 チャネルはゴルーチン間の値の受け渡しに利用するために設計されている。
 単独のmain関数から起動されたゴルーチン内のみでキューのように利用してはならない。

 バッファが1以上あれば、自分で他のゴルーチンを起動していなくても、
 チャネルに値を送信して、そのチャネルから送信した値を受信することは確かにできるが、
 ゴルーチンはそのような一つのゴルーチン内で利用するキューのような目的で設計されたものではない。
 バッファの空きがなくなり、デッドロックに陥る可能性があり危険。
 チャネルはゴルーチン間の値の受け渡しのみに利用する。
 */

func main() {
	ch := make(chan int64, 1)

	// この時点でバッファに飽きがあるため、このゴルーチンは次の処理に進める
	ch <- time.Now().Unix()

	// 上の処理のあとチャンネルから値を取得し、表示できる。
	value := <- ch
	fmt.Println(value)
}
